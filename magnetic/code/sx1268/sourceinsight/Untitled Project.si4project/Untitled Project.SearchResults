---- preamble Matches (70 in 12 files) ----
main.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 88 : 
//  4: 4/8]
#define LORA_PREAMBLE_LENGTH                        8         // Same for Tx and Rx
#define LORA_SYMBOL_TIMEOUT                         0         // Symbols
#define LORA_FIX_LENGTH_PAYLOAD_ON                  FALSE
#define LORA_IQ_INVERSION_ON                        FALSE
main.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 99 : 
#define FSK_AFC_BANDWIDTH                           100e3     // Hz
#define FSK_PREAMBLE_LENGTH                         5         // Same for Tx and Rx
#define FSK_FIX_LENGTH_PAYLOAD_ON                   FALSE

#else
main in main.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) : 
                    LORA_SPREADING_FACTOR, LORA_CODINGRATE,
                    LORA_PREAMBLE_LENGTH, LORA_FIX_LENGTH_PAYLOAD_ON,
                    TRUE, 0, 0, LORA_IQ_INVERSION_ON, 3000 );
  
  Radio.SetRxConfig( MODEM_LORA, LORA_BANDWIDTH, LORA_SPREADING_FACTOR,
                    LORA_CODINGRATE, 0, LORA_PREAMBLE_LENGTH,
                    LORA_SYMBOL_TIMEOUT, LORA_FIX_LENGTH_PAYLOAD_ON,
                    0, TRUE, 0, 0, LORA_IQ_INVERSION_ON, FALSE );
  
main in main.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) : 
                    FSK_DATARATE, 0,
                    FSK_PREAMBLE_LENGTH, FSK_FIX_LENGTH_PAYLOAD_ON,
                    TRUE, 0, 0, 0, 3000 );
  
  Radio.SetRxConfig( MODEM_FSK, FSK_BANDWIDTH, FSK_DATARATE,
                    0, FSK_AFC_BANDWIDTH, FSK_PREAMBLE_LENGTH,
                    0, FSK_FIX_LENGTH_PAYLOAD_ON, 0, TRUE,
                    0, 0,FALSE, TRUE );
#else
radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) line 105 : 
 *                          LoRa: N/A ( set to 0 )
 * \param [IN] preambleLen  Sets the Preamble length
 *                          FSK : Number of bytes
 *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
 * \param [IN] symbTimeout  Sets the RxSingle timeout value
RadioSetRxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
                          uint32_t datarate, uint8_t coderate,
                          uint32_t bandwidthAfc, uint16_t preambleLen,
                          uint16_t symbTimeout, bool fixLen,
                          uint8_t payloadLen,
                          bool crcOn, bool FreqHopOn, uint8_t HopPeriod,
radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) line 153 : 
 *                          LoRa: [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]
 * \param [IN] preambleLen  Sets the preamble length
 *                          FSK : Number of bytes
 *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
 * \param [IN] fixLen       Fixed length packets [0: variable, 1: fixed]
RadioSetTxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
                          uint32_t bandwidth, uint32_t datarate,
                          uint8_t coderate, uint16_t preambleLen,
                          bool fixLen, bool crcOn, bool FreqHopOn,
                          uint8_t HopPeriod, bool iqInverted, uint32_t timeout );

RadioSetRxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
                         uint32_t datarate, uint8_t coderate,
                         uint32_t bandwidthAfc, uint16_t preambleLen,
                         uint16_t symbTimeout, bool fixLen,
                         uint8_t payloadLen,
                         bool crcOn, bool freqHopOn, uint8_t hopPeriod,
RadioSetRxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
        case MODEM_FSK:
            SX126xSetStopRxTimerOnPreambleDetect( FALSE );
            SX126x.ModulationParams.PacketType = PACKET_TYPE_GFSK;

            SX126x.ModulationParams.Params.Gfsk.BitRate = datarate;
RadioSetRxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
            SX126x.PacketParams.PacketType = PACKET_TYPE_GFSK;
            SX126x.PacketParams.Params.Gfsk.PreambleLength = ( preambleLen << 3 ); // convert byte into bit
            SX126x.PacketParams.Params.Gfsk.PreambleMinDetect = RADIO_PREAMBLE_DETECTOR_08_BITS;
            SX126x.PacketParams.Params.Gfsk.SyncWordLength = 3 << 3; // convert byte into bit
            SX126x.PacketParams.Params.Gfsk.AddrComp = RADIO_ADDRESSCOMP_FILT_OFF;
            SX126x.PacketParams.Params.Gfsk.HeaderType = ( fixLen == TRUE ) ? RADIO_PACKET_FIXED_LENGTH : RADIO_PACKET_VARIABLE_LENGTH;
RadioSetRxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
        case MODEM_LORA:
            SX126xSetStopRxTimerOnPreambleDetect( FALSE );
            SX126xSetLoRaSymbNumTimeout( symbTimeout );
            SX126x.ModulationParams.PacketType = PACKET_TYPE_LORA;
            SX126x.ModulationParams.Params.LoRa.SpreadingFactor = ( RadioLoRaSpreadingFactors_t )datarate;
RadioSetRxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
            {
                if( preambleLen < 12 )
                {
                    SX126x.PacketParams.Params.LoRa.PreambleLength = 12;
                }
                else
                {
                    SX126x.PacketParams.Params.LoRa.PreambleLength = preambleLen;
                }
            }
            else
            {
                SX126x.PacketParams.Params.LoRa.PreambleLength = preambleLen;
            }

            SX126x.PacketParams.Params.LoRa.HeaderType = ( RadioLoRaPacketLengthsMode_t )fixLen;
RadioSetTxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
                        uint32_t bandwidth, uint32_t datarate,
                        uint8_t coderate, uint16_t preambleLen,
                        bool fixLen, bool crcOn, bool freqHopOn,
                        uint8_t hopPeriod, bool iqInverted, uint32_t timeout )
{
RadioSetTxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
            SX126x.PacketParams.PacketType = PACKET_TYPE_GFSK;
            SX126x.PacketParams.Params.Gfsk.PreambleLength = ( preambleLen << 3 ); // convert byte into bit
            SX126x.PacketParams.Params.Gfsk.PreambleMinDetect = RADIO_PREAMBLE_DETECTOR_08_BITS;
            SX126x.PacketParams.Params.Gfsk.SyncWordLength = 3 << 3 ; // convert byte into bit
            SX126x.PacketParams.Params.Gfsk.AddrComp = RADIO_ADDRESSCOMP_FILT_OFF;
            SX126x.PacketParams.Params.Gfsk.HeaderType = ( fixLen == TRUE ) ? RADIO_PACKET_FIXED_LENGTH : RADIO_PACKET_VARIABLE_LENGTH;
RadioSetTxConfig in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
            {
                if( preambleLen < 12 )
                {
                    SX126x.PacketParams.Params.LoRa.PreambleLength = 12;
                }
                else
                {
                    SX126x.PacketParams.Params.LoRa.PreambleLength = preambleLen;
                }
            }
            else
            {
                SX126x.PacketParams.Params.LoRa.PreambleLength = preambleLen;
            }

            SX126x.PacketParams.Params.LoRa.HeaderType = ( RadioLoRaPacketLengthsMode_t )fixLen;
RadioTimeOnAir in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
        {
           airTime = rint( ( 8 * ( SX126x.PacketParams.Params.Gfsk.PreambleLength +
                                     ( SX126x.PacketParams.Params.Gfsk.SyncWordLength >> 3 ) +
                                     ( ( SX126x.PacketParams.Params.Gfsk.HeaderType == RADIO_PACKET_FIXED_LENGTH ) ? 0.0 : 1.0 ) +
                                     pktLen +
RadioTimeOnAir in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
            double ts = RadioLoRaSymbTime[SX126x.ModulationParams.Params.LoRa.Bandwidth - 4][12 - SX126x.ModulationParams.Params.LoRa.SpreadingFactor];
            // time of preamble
            double tPreamble = ( SX126x.PacketParams.Params.LoRa.PreambleLength + 4.25 ) * ts;
            // Symbol length of payload and time
            double tmp = ceil( ( 8 * pktLen - 4 * SX126x.ModulationParams.Params.LoRa.SpreadingFactor +
                                 28 + 16 * SX126x.PacketParams.Params.LoRa.CrcMode -
RadioTimeOnAir in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
            // Time on air
            double tOnAir = tPreamble + tPayload;
            // return milli seconds
            airTime = floor( tOnAir + 0.999 );
        }
RadioIrqProcess in radio.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 

        if( ( irqRegs & IRQ_PREAMBLE_DETECTED ) == IRQ_PREAMBLE_DETECTED )
        {
            //__NOP( );
        }
Radio_s in radio.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) : 
     *                          LoRa: N/A ( set to 0 )
     * \param [IN] preambleLen  Sets the Preamble length
     *                          FSK : Number of bytes
     *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
     * \param [IN] symbTimeout  Sets the RxSingle timeout value
Radio_s in radio.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) : 
                              uint32_t datarate, uint8_t coderate,
                              uint32_t bandwidthAfc, uint16_t preambleLen,
                              uint16_t symbTimeout, bool fixLen,
                              uint8_t payloadLen,
                              bool crcOn, bool freqHopOn, uint8_t hopPeriod,
Radio_s in radio.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) : 
     *                          LoRa: [1: 4/5, 2: 4/6, 3: 4/7, 4: 4/8]
     * \param [IN] preambleLen  Sets the preamble length
     *                          FSK : Number of bytes
     *                          LoRa: Length in symbols (the hardware adds 4 more symbols)
     * \param [IN] fixLen       Fixed length packets [0: variable, 1: fixed]
Radio_s in radio.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) : 
                              uint32_t bandwidth, uint32_t datarate,
                              uint8_t coderate, uint16_t preambleLen,
                              bool fixLen, bool crcOn, bool freqHopOn,
                              uint8_t hopPeriod, bool iqInverted, uint32_t timeout );
    /*!
moduleNormalOperation in RF.c (F:\projects\git\Hardware\magnetic\code\sx1268\Driver\HAL) : 
    {
      SX1276_SetPreambleSize(8);
       SX1276_SetRxMode();
      //?????????????????????Щ
      AUX_CONFIGURING();
moduleNormalOperation in RF.c (F:\projects\git\Hardware\magnetic\code\sx1268\Driver\HAL) : 
      UsartReceiveFlag = 0;
     // SX1276_SetPreambleSize(2000);
      // SX1276_SetPreambleSize(65530);
	 //SX1276_SetRxMode();
    }
    if( ExitInterFlag) 
moduleNormalOperation in RF.c (F:\projects\git\Hardware\magnetic\code\sx1268\Driver\HAL) : 
    //USART_SendStr("???+???????????\r\n");
    //SX1276_SetPreambleSize(65530);
    // SX1276_SetRxMode();
    Module_mode.ConfigureDone = 1;
    AUX_CONFIGURED();
moduleWakeUpOperation in RF.c (F:\projects\git\Hardware\magnetic\code\sx1268\Driver\HAL) : 
    {
      SX1276_SetPreambleSize((pream_long[Module_Params.AirRate]*(Module_Params.WakeupTime/250)));	//??????972 BW 500kHZ SF?7 ????д??????250ms
      SX1276_SetRxMode();
      SX1276_SendPacket(UsartReceiveData, (usart_i-1));
      USART_SendData8(USART1, (usart_i-1));
moduleWakeUpOperation in RF.c (F:\projects\git\Hardware\magnetic\code\sx1268\Driver\HAL) : 
      }
      SX1276_SetPreambleSize(65530);							//???????????????????????????????????????????
      usart_i = 0;
      LED_TOG();
      UsartReceiveFlag = 0;
moduleWakeUpOperation in RF.c (F:\projects\git\Hardware\magnetic\code\sx1268\Driver\HAL) : 
    USART_SendStr("???+???????????\r\n");
    SX1276_SetPreambleSize((pream_long[Module_Params.AirRate]*(Module_Params.WakeupTime/250))); //??????972 BW 500kHZ SF?7 ????д??????250ms
    Module_mode.ConfigureDone = 1;
    AUX_CONFIGURED();
  }
modulePowerSavingModeOperation in RF.c (F:\projects\git\Hardware\magnetic\code\sx1268\Driver\HAL) : 
    */
    SX1276_SetPreambleSize(65530);
    RTC_Config(Module_Params.WakeupTime);
    enableInterrupts();
    Module_mode.ConfigureDone = 1;
sx126x.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) line 319 : 

void SX126xSetTxInfinitePreamble( void )
{
    SX126xWriteCommand( RADIO_SET_TXCONTINUOUSPREAMBLE, 0, 0 );
}

void SX126xSetStopRxTimerOnPreambleDetect( bool enable )
{
    SX126xWriteCommand( RADIO_SET_STOPRXTIMERONPREAMBLE, ( uint8_t* )&enable, 1 );
}
SX126xSetPacketParams in sx126x.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
        n = 9;
        buf[0] = ( packetParams->Params.Gfsk.PreambleLength >> 8 ) & 0xFF;
        buf[1] = packetParams->Params.Gfsk.PreambleLength;
        buf[2] = packetParams->Params.Gfsk.PreambleMinDetect;
        buf[3] = ( packetParams->Params.Gfsk.SyncWordLength /*<< 3*/ ); // convert from byte to bit
        buf[4] = packetParams->Params.Gfsk.AddrComp;
        buf[5] = packetParams->Params.Gfsk.HeaderType;
SX126xSetPacketParams in sx126x.c (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\src) : 
        n = 6;
        buf[0] = ( packetParams->Params.LoRa.PreambleLength >> 8 ) & 0xFF;
        buf[1] = packetParams->Params.LoRa.PreambleLength;
        buf[2] = packetParams->Params.LoRa.HeaderType;
        buf[3] = packetParams->Params.LoRa.PayloadLength;
        buf[4] = packetParams->Params.LoRa.CrcMode;
sx126x.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) line 343 : 
/*!
 * \brief Represents the preamble length used to detect the packet on Rx side
 */
typedef enum
{
    RADIO_PREAMBLE_DETECTOR_OFF             = 0x00,         //!< Preamble detection length off
    RADIO_PREAMBLE_DETECTOR_08_BITS         = 0x04,         //!< Preamble detection length 8 bits
    RADIO_PREAMBLE_DETECTOR_16_BITS         = 0x05,         //!< Preamble detection length 16 bits
    RADIO_PREAMBLE_DETECTOR_24_BITS         = 0x06,         //!< Preamble detection length 24 bits
    RADIO_PREAMBLE_DETECTOR_32_BITS         = 0x07,         //!< Preamble detection length 32 bit
}RadioPreambleDetection_t;

/*!
 * \brief Represents the possible combinations of SyncWord correlators activated
sx126x.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) line 450 : 
    IRQ_RX_DONE                             = 0x0002,
    IRQ_PREAMBLE_DETECTED                   = 0x0004,
    IRQ_SYNCWORD_VALID                      = 0x0008,
    IRQ_HEADER_VALID                        = 0x0010,
    IRQ_HEADER_ERROR                        = 0x0020,
{anonPacketParams_t}::{anonParams}::{anonGfsk} in sx126x.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) : 
        {
            uint16_t                     PreambleLength;    //!< The preamble Tx length for GFSK packet type in bit
            RadioPreambleDetection_t     PreambleMinDetect; //!< The preamble Rx length minimal for GFSK packet type
            uint8_t                      SyncWordLength;    //!< The synchronization word length for GFSK packet type
            RadioAddressComp_t           AddrComp;          //!< Activated SyncWord correlators
            RadioPacketLengthModes_t     HeaderType;        //!< If the header is explicit, it will be transmitted in the GFSK packet. If the header is implicit, it will not be transmitted
{anonPacketParams_t}::{anonParams}::{anonLoRa} in sx126x.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) : 
        {
            uint16_t                     PreambleLength;    //!< The preamble length is the number of LoRa symbols in the preamble
            RadioLoRaPacketLengthsMode_t HeaderType;        //!< If the header is explicit, it will be transmitted in the LoRa packet. If the header is implicit, it will not be transmitted
            uint8_t                      PayloadLength;     //!< Size of the payload in the LoRa packet
            RadioLoRaCrcModes_t          CrcMode;           //!< Size of CRC block in LoRa packet
{anonSX126xCallbacks_t} in sx126x.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) : 
    void ( *rxDone )( void );                       //!< Pointer to a function run on successful reception
    void ( *rxPreambleDetect )( void );             //!< Pointer to a function run on successful Preamble detection
    void ( *rxSyncWordDone )( void );               //!< Pointer to a function run on successful SyncWord reception
    void ( *rxHeaderDone )( bool isOk );            //!< Pointer to a function run on successful Header reception
    void ( *txTimeout )( void );                    //!< Pointer to a function run on transmission timeout
sx126x.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) line 865 : 
/*!
 * \brief Sets the radio in continuous preamble transmission mode
 */
void SX126xSetTxInfinitePreamble( void );

/*!
 * \brief Decide which interrupt will stop the internal radio rx timer.
sx126x.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) line 873 : 
 * \param [in]  enable          [0: Timer stop after header/syncword detection
 *                               1: Timer stop after preamble detection]
 */
void SX126xSetStopRxTimerOnPreambleDetect( bool enable );

/*!
 * \brief Set the number of symbol the radio will wait to validate a reception
sx126x.h (F:\projects\git\Hardware\magnetic\code\sx1268\Radio\inc) line 906 : 
/*!
 * \brief Activate the extention of the timeout when long preamble is used
 *
 * \param [in]  enable      The radio will extend the timeout to cope with long preamble
 */
void SX126xSetLongPreamble( uint8_t enable );

/*!
 * \brief Sets the transmission parameters
sx1276-Fsk.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 209 : 
===============================================================================
*Function:  SX1276_Fsk_SetPreambleLength( ) => Set the preamble length
*Input   :  fsk_preamble_length,
*Output  :  None
===============================================================================
*/
void SX1276_Fsk_SetPreambleLength( INT16U fsk_preamble_length )
{
	INT8U tmp;
	tmp = SX1276_ReadReg( REG_PREAMBLEMSB );
	tmp &= 0x00;
	tmp |= ( ( fsk_preamble_length >> 8 ) & 0xFF );
	SX1276_WriteReg( REG_PREAMBLEMSB, tmp );

	tmp = SX1276_ReadReg( REG_PREAMBLELSB );
	tmp &= 0x00;
	tmp |= ( fsk_preamble_length & 0xFF );
	SX1276_WriteReg( REG_PREAMBLELSB, tmp );
}
/*
===============================================================================
sx1276-Fsk.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 343 : 
{
	( DEF_PREAMBLEDETECT & 0x00 ) | RF_PREAMBLEDETECT_DETECTOR_ON | RF_PREAMBLEDETECT_DETECTORSIZE_2 | RF_PREAMBLEDETECT_DETECTORTOL_10,
	DEF_RXTIMEOUT1,
	DEF_RXTIMEOUT2,
	DEF_RXTIMEOUT3,
sx1276-Fsk.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 349 : 
	DEF_OSC,  //CLKOUT frequency:  FXOSC
	DEF_PREAMBLEMSB,
	DEF_PREAMBLELSB,  //Size of the preamble : 3 bytes
	( DEF_SYNCCONFIG & RF_SYNCCONFIG_SYNCSIZE_MASK ) | RF_SYNCCONFIG_SYNCSIZE_2,  //Sync size: 8 bytes
	DEF_SYNCVALUE1 | 0x69,
	DEF_SYNCVALUE2 | 0x81,
SX1276_Fsk_Init in sx1276-Fsk.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) : 
	SX1276_WriteBuffer( REG_RXBW, Fsk_RegsTable2, 0x1A - 0x12 + 1 );  //Regs 0x12 - 0x1A
	SX1276_WriteBuffer( REG_PREAMBLEDETECT, Fsk_RegsTable3, 0x3B - 0x1F + 1 );  //Regs 0x1F - 0x3B
	SX1276_WriteReg( REG_LOWBAT, DEF_LOWBAT ); //Regs 0x3D
	SX1276_WriteReg( REG_DIOMAPPING1, DEF_DIOMAPPING1 );  //Regs 0x40
	SX1276_WriteReg( REG_DIOMAPPING2, DEF_DIOMAPPING2 );  //Regs 0x41
SX1276_Fsk_StartRx in sx1276-Fsk.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) : 
                          							  | RF_DIOMAPPING1_DIO3_00 );  //FifoEmpty
	SX1276_WriteReg( REG_DIOMAPPING2, DEF_DIOMAPPING2 | RF_DIOMAPPING2_DIO4_11  //Preamble
	                                                  | RF_DIOMAPPING2_DIO5_10 );  //Data
	SX1276_SetSwitchRx( );
	SX1276_Fsk_SetMode( FSK_MODE_RX ); //Rx model
sx1276-Fsk.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 483 : 
===============================================================================
*Function:  SX1276_Fsk_SetPreambleSize( ) =>Set the preamble count
*Input   :  cnt, count of the preamble size
*Output  :  None
===============================================================================
*/
void SX1276_Fsk_SetPreambleSize( INT16U cnt )
{
    SX1276_WriteReg( REG_PREAMBLEMSB, cnt >> 8 );
    SX1276_WriteReg( REG_PREAMBLELSB, cnt );
}


sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 44 : 
#define REG_FEILSB                                  0x1E
#define REG_PREAMBLEDETECT                          0x1F
#define REG_RXTIMEOUT1                              0x20
#define REG_RXTIMEOUT2                              0x21
#define REG_RXTIMEOUT3                              0x22
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 52 : 
// Packet handler settings
#define REG_PREAMBLEMSB                             0x25
#define REG_PREAMBLELSB                             0x26
#define REG_SYNCCONFIG                              0x27
#define REG_SYNCVALUE1                              0x28
#define REG_SYNCVALUE2                              0x29
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 133 : 

#define DEF_PREAMBLEDETECT                          0x40
#define DEF_RXTIMEOUT1                              0x00
#define DEF_RXTIMEOUT2                              0x00
#define DEF_RXTIMEOUT3                              0x00
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 141 : 
// Packet handler settings
#define DEF_PREAMBLEMSB                             0x00
#define DEF_PREAMBLELSB                             0x03
#define DEF_SYNCCONFIG                              0x93
#define DEF_SYNCVALUE1                              0x00
#define DEF_SYNCVALUE2                              0x00
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 581 : 
#define RF_RXCONFIG_RXTRIGER_RSSI                   0x01
#define RF_RXCONFIG_RXTRIGER_PREAMBLEDETECT         0x06 // Default
#define RF_RXCONFIG_RXTRIGER_RSSI_PREAMBLEDETECT    0x07

/*!
 * RegRssiConfig
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 761 : 
/*!
 * RegPreambleDetect
 */
#define RF_PREAMBLEDETECT_DETECTOR_MASK             0x7F
#define RF_PREAMBLEDETECT_DETECTOR_ON               0x80  // Default
#define RF_PREAMBLEDETECT_DETECTOR_OFF              0x00

#define RF_PREAMBLEDETECT_DETECTORSIZE_MASK         0x9F
#define RF_PREAMBLEDETECT_DETECTORSIZE_1            0x00
#define RF_PREAMBLEDETECT_DETECTORSIZE_2            0x20  // Default
#define RF_PREAMBLEDETECT_DETECTORSIZE_3            0x40
#define RF_PREAMBLEDETECT_DETECTORSIZE_4            0x60

#define RF_PREAMBLEDETECT_DETECTORTOL_MASK          0xE0
#define RF_PREAMBLEDETECT_DETECTORTOL_0             0x00
#define RF_PREAMBLEDETECT_DETECTORTOL_1             0x01
#define RF_PREAMBLEDETECT_DETECTORTOL_2             0x02
#define RF_PREAMBLEDETECT_DETECTORTOL_3             0x03
#define RF_PREAMBLEDETECT_DETECTORTOL_4             0x04
#define RF_PREAMBLEDETECT_DETECTORTOL_5             0x05
#define RF_PREAMBLEDETECT_DETECTORTOL_6             0x06
#define RF_PREAMBLEDETECT_DETECTORTOL_7             0x07
#define RF_PREAMBLEDETECT_DETECTORTOL_8             0x08
#define RF_PREAMBLEDETECT_DETECTORTOL_9             0x09
#define RF_PREAMBLEDETECT_DETECTORTOL_10            0x0A  // Default
#define RF_PREAMBLEDETECT_DETECTORTOL_11            0x0B
#define RF_PREAMBLEDETECT_DETECTORTOL_12            0x0C
#define RF_PREAMBLEDETECT_DETECTORTOL_13            0x0D
#define RF_PREAMBLEDETECT_DETECTORTOL_14            0x0E
#define RF_PREAMBLEDETECT_DETECTORTOL_15            0x0F
#define RF_PREAMBLEDETECT_DETECTORTOL_16            0x10
#define RF_PREAMBLEDETECT_DETECTORTOL_17            0x11
#define RF_PREAMBLEDETECT_DETECTORTOL_18            0x12
#define RF_PREAMBLEDETECT_DETECTORTOL_19            0x13
#define RF_PREAMBLEDETECT_DETECTORTOL_20            0x14
#define RF_PREAMBLEDETECT_DETECTORTOL_21            0x15
#define RF_PREAMBLEDETECT_DETECTORTOL_22            0x16
#define RF_PREAMBLEDETECT_DETECTORTOL_23            0x17
#define RF_PREAMBLEDETECT_DETECTORTOL_24            0x18
#define RF_PREAMBLEDETECT_DETECTORTOL_25            0x19
#define RF_PREAMBLEDETECT_DETECTORTOL_26            0x1A
#define RF_PREAMBLEDETECT_DETECTORTOL_27            0x1B
#define RF_PREAMBLEDETECT_DETECTORTOL_28            0x1C
#define RF_PREAMBLEDETECT_DETECTORTOL_29            0x1D
#define RF_PREAMBLEDETECT_DETECTORTOL_30            0x1E
#define RF_PREAMBLEDETECT_DETECTORTOL_31            0x1F

/*!
 * RegRxTimeout1
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 843 : 
/*!
 * RegPreambleMsb/RegPreambleLsb
 */
#define RF_PREAMBLEMSB_SIZE                         0x00  // Default
#define RF_PREAMBLELSB_SIZE                         0x03  // Default

/*!
 * RegSyncConfig
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 857 : 

#define RF_SYNCCONFIG_PREAMBLEPOLARITY_MASK         0xDF
#define RF_SYNCCONFIG_PREAMBLEPOLARITY_55           0x20
#define RF_SYNCCONFIG_PREAMBLEPOLARITY_AA           0x00  // Default

#define RF_SYNCCONFIG_SYNC_MASK                     0xEF
#define RF_SYNCCONFIG_SYNC_ON                       0x10  // Default
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 1106 : 

#define RF_IRQFLAGS1_PREAMBLEDETECT                 0x02

#define RF_IRQFLAGS1_SYNCADDRESSMATCH               0x01

sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 1172 : 
#define RF_DIOMAPPING2_MAP_MASK                     0xFE
#define RF_DIOMAPPING2_MAP_PREAMBLEDETECT           0x01
#define RF_DIOMAPPING2_MAP_RSSI                     0x00  // Default

/*!
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 1342 : 

/* Set the preamble length */
void SX1276_Fsk_SetPreambleLength( INT16U fsk_preamble_length );

/* Enables/Disables the Sync word generation and detection */
void SX1276_Fsk_SetSyncEn( SYNC_EN sync_en );
sx1276-Fsk.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 1375 : 

/*Set the preamble count*/
void SX1276_Fsk_SetPreambleSize( INT16U cnt );


#endif //__SX1276_FSK_H__
sx1276-lora.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 314 : 
	DEF_LR_SYMBTIMEOUTLSB | 0xff,  // SymbTimeout(7:0) 0xff
	DEF_LR_PREAMBLEMSB,
	DEF_LR_PREAMBLELSB,  //8 bytes preamble
	DEF_LR_PAYLOADLENGTH,  //1 bytes payload
	DEF_LR_PAYLOADMAXLENGTH,  //255 bytes
	DEF_LR_HOPPERIOD   //0,Disables the frequency hopping
sx1276-lora.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 580 : 
===============================================================================
*Function:  SX1276_Lora_SetPreambleSize( ) =>Set the preamble count
*Input   :  cnt, count of the preamble size
*Output  :  None
===============================================================================
*/
void SX1276_Lora_SetPreambleSize( INT16U cnt )
{
    SX1276_LoRa_SetMode( LORA_MODE_STDBY );
    SX1276_WriteReg( REG_LR_PREAMBLEMSB, cnt >> 8 );
    SX1276_WriteReg( REG_LR_PREAMBLELSB, cnt );
}


sx1276-LoRa.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 42 : 
#define REG_LR_SYMBTIMEOUTLSB                       0x1F
#define REG_LR_PREAMBLEMSB                          0x20
#define REG_LR_PREAMBLELSB                          0x21
#define REG_LR_PAYLOADLENGTH                        0x22
#define REG_LR_PAYLOADMAXLENGTH                     0x23
#define REG_LR_HOPPERIOD                            0x24
sx1276-LoRa.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 92 : 
#define DEF_LR_SYMBTIMEOUTLSB                       0x64
#define DEF_LR_PREAMBLEMSB                          0x00
#define DEF_LR_PREAMBLELSB                          0x08
#define DEF_LR_PAYLOADLENGTH                        0x01
#define DEF_LR_PAYLOADMAXLENGTH                     0xFF
#define DEF_LR_HOPPERIOD                            0x00
sx1276-LoRa.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 533 : 
/*!
 * RegPreambleLengthMsb
 */
#define RFLR_PREAMBLELENGTHMSB                      0x00 // Default

/*!
 * RegPreambleLengthLsb
 */
#define RFLR_PREAMBLELENGTHLSB                      0x08 // Default

/*!
 * RegPayloadLength
sx1276-LoRa.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 601 : 
#define RFLR_DIOMAPPING2_MAP_MASK                   0xFE
#define RFLR_DIOMAPPING2_MAP_PREAMBLEDETECT         0x01
#define RFLR_DIOMAPPING2_MAP_RSSI                   0x00  // Default

/*!
sx1276-LoRa.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 847 : 

/*the preamble count*/
void SX1276_Lora_SetPreambleSize( INT16U cnt );

#endif //__SX1276_LORA_H__
sx1276.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) line 438 : 
===============================================================================
*Function:  SX1276_SetPreambleSize( ) => Set the preamble count of the device
*Input   :  preamble_cnt, the count of the preamble size
*Output  :  None
===============================================================================
*/
void SX1276_SetPreambleSize( INT16U preamble_cnt )
{
    if( ( SX1276.Mode_Lora_Fsk != MODE_FSK ) && ( SX1276.Mode_Lora_Fsk != MODE_LORA ) )
    { SX1276.Mode_Lora_Fsk = MODE_LORA; }
SX1276_SetPreambleSize in sx1276.c (F:\projects\git\Hardware\magnetic\code\sx1268\App) : 
    {
        SX1276_Lora_SetPreambleSize( preamble_cnt );
    }
    else
    {
        SX1276_Fsk_SetPreambleSize( preamble_cnt );
    }
}
/*
sx1276.h (F:\projects\git\Hardware\magnetic\code\sx1268\Include) line 104 : 

/*Set the preamble count of the device*/
void SX1276_SetPreambleSize( INT16U preamble_cnt );


#endif //__SX1276_H__
