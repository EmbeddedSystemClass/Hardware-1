#include "Module_ctrl.h"
#include "main.h"
#include "BSP.h"
#include "LTE_BSP.h"
#include "stm32f4xx_hal.h"
#include "systick_timer.h"
#include <string.h>
#include "SIM7600SA.h"
#include "CRC.h"
#include "UART_Process.h"
#include "RF_Process.h"
#include "LTE_analysis.h"
#include "m25p64.h"

GPS_INFO        GPS;
Module_Sample_Time sample_time_flag;
device_com_down  dev_info;


extern Uart_Types_2 UsartType2;
extern Uart_Types_2 UsartType3;
extern Uart_Types UsartType5;

unsigned char Net_status_flag;
unsigned char GetGps_Info_Poll()
{
    if(sample_time_flag.GPS_sample_flag==1)
    {
		Reset_Sample_flag(GPS_INTERVAL_INDEX);
		if(Net_status_flag==SIMCOM_NET_OK)
		{
		   if(SIMCOM_Get_QuitTransparent_Staus(5)==1)
		   {
		   		SIMCOM_GetGPS_Info(&UsartType5.usartDMA_rxBuf[UsartType5.real_index],GPS,1,10);
		   }
		   if(SIMCOM_Get_TO_DataMode_Staus(15)==1)
		   	return 1;
		   	
		}
		return 0;

	}
		
}

unsigned char GetServer_Info_Poll()//服务器下发指令
{
		if(Net_status_flag==SIMCOM_NET_OK)
		{
		  	 if((LTE_Parse(&UsartType5.usartDMA_rxBuf[UsartType5.real_index], dev_info))
		  	 {
				UsartType5.receive_flag=0;
				memcpy(&UsartType5.usartDMA_rxBuf[UsartType5.real_index],dev_info,dev_info.len);
				return 1;
			 }
			 	
		}
		return 0;
		
}

void Modue_Run_Process()
{
		Sample_Timer_Reload();
		
		Net_status_flag=Get_Network_status();  			//实时获取网络状态
		sample_time_flag=Get_Sample_flag_Status();      //获取各个参数采样时间是否到达
		GetServer_Info_Poll();//服务器下发指令
		if(GetGps_Info_Poll()==1)                       //获取gps信息完成，返回透传状态成功
			SIMCOM_Reconnect_status();                  //重新链接服务器，如果退出透传时间短，可能不需要该操作
		SIMCOM_Register_Network();                      //实时监控网络，及时重连
		
}





